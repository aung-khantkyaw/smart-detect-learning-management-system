enum assignment_question_type {
  TEXT
  PDF
}

enum quiz_question_type {
  SINGLE_CHOICE
  MULTIPLE_CHOICE
  SHORT_TEXT
}

enum submission_status {
  PENDING
  SUBMITTED
  GRADED
  REJECTED_AI
}

enum user_role {
  ADMIN
  TEACHER
  STUDENT
}

table academic_chat_rooms {
  id uuid [pk, not null, default: `gen_random_uuid()`]
  academic_year_id uuid [not null, unique]
  name text [not null]
  created_at timestamp [not null, default: `now()`]
}

table academic_years {
  id uuid [pk, not null, default: `gen_random_uuid()`]
  name text [not null, unique]
  start_date date [not null]
  end_date date [not null]
  created_at timestamp [not null, default: `now()`]
}

table ai_flags {
  id uuid [pk, not null, default: `gen_random_uuid()`]
  offering_id uuid [not null]
  student_id uuid [not null]
  flagged_count integer [not null, default: 0]
  last_flagged_at timestamp

  indexes {
    (offering_id, student_id) [name: 'ai_flags_offering_id_student_id_unique', unique]
  }
}

table announcements {
  id uuid [pk, not null, default: `gen_random_uuid()`]
  scope text [not null]
  scope_id uuid [not null]
  title text [not null]
  content text [not null]
  author_id uuid
  created_at timestamp [not null, default: `now()`]
  updated_at timestamp [not null, default: `now()`]
}

table assignment_submissions {
  id uuid [pk, not null, default: `gen_random_uuid()`]
  assignment_id uuid [not null]
  student_id uuid [not null]
  submitted_at timestamp
  text_answer text
  score numeric
  status submission_status [not null, default: 'PENDING']
  attempt_number integer [not null, default: 1]

  indexes {
    (assignment_id, student_id, attempt_number) [name: 'assignment_unique_attempt', unique]
  }
}

table assignments {
  id uuid [pk, not null, default: `gen_random_uuid()`]
  offering_id uuid [not null]
  title text [not null]
  description text
  question_type assignment_question_type [not null, default: 'TEXT']
  question_text text
  question_file_url text
  due_at timestamp
  created_at timestamp [not null, default: `now()`]
}

table chat_members {
  id uuid [pk, not null, default: `gen_random_uuid()`]
  room_type text [not null]
  room_id uuid [not null]
  user_id uuid [not null]
  joined_at timestamp [not null, default: `now()`]

  indexes {
    
    (room_type, room_id, user_id) [name: 'chat_members_room_type_room_id_user_id_unique', unique]
  }
}

table chat_messages {
  id uuid [pk, not null, default: `gen_random_uuid()`]
  room_type text [not null]
  room_id uuid [not null]
  sender_id uuid [not null]
  message text
  file_url text
  created_at timestamp [not null, default: `now()`]
}

table course_chat_rooms {
  id uuid [pk, not null, default: `gen_random_uuid()`]
  offering_id uuid [not null, unique]
  name text [not null]
  created_at timestamp [not null, default: `now()`]
}

table course_offerings {
  id uuid [pk, not null, default: `gen_random_uuid()`]
  course_id uuid [not null]
  academic_year_id uuid [not null]
  teacher_id uuid [not null]
  room_chat_id uuid
  created_at timestamp [not null, default: `now()`]

  indexes {
    (course_id, academic_year_id, teacher_id) [name: 'course_offerings_course_id_academic_year_id_teacher_id_unique', unique]
  }
}

table courses {
  id uuid [pk, not null, default: `gen_random_uuid()`]
  code text [not null, unique]
  title text [not null]
  description text
  department_id uuid [not null]
  created_at timestamp [not null, default: `now()`]
  updated_at timestamp [not null, default: `now()`]
}

table departments {
  id uuid [pk, not null, default: `gen_random_uuid()`]
  name text [not null, unique]
  created_at timestamp [not null, default: `now()`]
}

table enrollments {
  id uuid [pk, not null, default: `gen_random_uuid()`]
  offering_id uuid [not null]
  student_id uuid [not null]
  enrolled_at timestamp [not null, default: `now()`]

  indexes {
    (offering_id, student_id) [name: 'enrollments_offering_id_student_id_unique', unique]
  }
}

table majors {
  id uuid [pk, not null, default: `gen_random_uuid()`]
  name text [not null, unique]
  created_at timestamp [not null, default: `now()`]
}

table materials {
  id uuid [pk, not null, default: `gen_random_uuid()`]
  offering_id uuid [not null]
  title text [not null]
  description text
  file_url text
  created_by uuid
  created_at timestamp [not null, default: `now()`]
}

table notifications {
  id uuid [pk, not null, default: `gen_random_uuid()`]
  user_id uuid [not null]
  title text [not null]
  body text
  created_at timestamp [not null, default: `now()`]
  read_at timestamp
}

table positions {
  id uuid [pk, not null, default: `gen_random_uuid()`]
  name text [not null, unique]
  created_at timestamp [not null, default: `now()`]
}

table quiz_answers {
  id uuid [pk, not null, default: `gen_random_uuid()`]
  submission_id uuid [not null]
  question_id uuid [not null]
  selected_option_ids uuid[]
  short_text_answer text
}

table quiz_options {
  id uuid [pk, not null, default: `gen_random_uuid()`]
  question_id uuid [not null]
  option_text text [not null]
  is_correct boolean [not null, default: false]
}

table quiz_questions {
  id uuid [pk, not null, default: `gen_random_uuid()`]
  quiz_id uuid [not null]
  question_type quiz_question_type [not null]
  prompt text [not null]
  points "numeric(6, 2)" [not null, default: '1']
}

table quiz_submissions {
  id uuid [pk, not null, default: `gen_random_uuid()`]
  quiz_id uuid [not null]
  student_id uuid [not null]
  submitted_at timestamp
  score "numeric(8, 2)"
  status submission_status [not null, default: 'PENDING']

  indexes {
    (quiz_id, student_id) [name: 'quiz_submissions_quiz_id_student_id_unique', unique]
  }
}

table quizzes {
  id uuid [pk, not null, default: `gen_random_uuid()`]
  offering_id uuid [not null]
  title text [not null]
  instructions text
  open_at timestamp
  close_at timestamp
  created_at timestamp [not null, default: `now()`]
}

table users {
  id uuid [pk, not null, default: `gen_random_uuid()`]
  username text [not null, unique]
  email text [not null, unique]
  password text [not null]
  role user_role [not null]
  full_name text [not null]
  is_active boolean [not null, default: true]
  department_id uuid
  position_id uuid
  major_id uuid
  academic_year_id uuid
  student_number text [unique]
  last_login_at timestamp
  access_token text
  password_reset_token text
  password_reset_expires_at timestamp
  created_at timestamp [not null, default: `now()`]
  updated_at timestamp [not null, default: `now()`]
}

ref: assignment_submissions.assignment_id > assignments.id

ref: assignment_submissions.student_id > users.id

ref: assignments.offering_id > course_offerings.id

ref: chat_messages.sender_id > users.id

ref: course_offerings.course_id > courses.id

ref: course_offerings.academic_year_id - academic_years.id

ref: course_offerings.teacher_id > users.id

ref: enrollments.offering_id > course_offerings.id

ref: enrollments.student_id - users.id

ref: materials.offering_id > course_offerings.id

ref: materials.created_by - users.id

ref: notifications.user_id > users.id

ref: quiz_answers.question_id > quiz_questions.id

ref: quiz_options.question_id > quiz_questions.id

ref: quiz_questions.quiz_id > quizzes.id

ref: quiz_submissions.quiz_id > quizzes.id

ref: quiz_submissions.student_id > users.id

ref: quizzes.offering_id > course_offerings.id

ref: users.academic_year_id - academic_years.id